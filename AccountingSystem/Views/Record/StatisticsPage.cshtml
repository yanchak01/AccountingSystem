@model AccountingSystem.ViewModels.EntitieViewModels.StatisticsViewModel

@{
    ViewBag.Title = "StatisticsPage";
}
<head>
  <script src="~/Scripts/Chart.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <style>
        #chart_container{
            width:400px;
            height:400px;
            border:1px solid #ddd;
            padding:1px;
            border-radius:4px;
        }
    </style>
</head>
<h2>StatisticsPage</h2>
<table>
    <tr>
        <td>
            <div>
                <hr />
                <dl class="dl-horizontal">
                </dl>
            </div>
            <table>
                <tr>
                    <td>Date</td>
                    <td>Count of records</td>
                </tr>
                @foreach (var item in Model.Statistic)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Key)  </td>
                        <td>- @Html.DisplayFor(modelItem => item.Value) post(s)</td>
                    </tr>
                }
            </table>
            <p>
                @Html.ActionLink("Back to List", "Index")
            </p>
        </td>
        <td>
            <div>
                <canvas id="myChart" width="400" height="400"></canvas>
            </div>
        </td>
    </tr>
</table>
<script>
    var numArray = @Html.Raw(Json.Encode(ViewBag.NUM));
    var dateArray = @Html.Raw(Json.Encode(ViewBag.DATE));
    var ctx = document.getElementById('myChart').getContext('2d');
    var barChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: dateArray,
            datasets: [{
                label: "Statistics",
                data: numArray,
                backgroundColor: ["rgba(242,166,54,.5)", "rgba(145,65,72,.5)", "rgba(74,25,92,.5)"],
                borderColor: ["rgb(242,166,54)", "rgb(145,65,72)", "rgb(74,25,92)"],
                borderWidth:1
            }]
        },
        options: {
            maintainAspectRatio: false,
            scales: { xAxes: [{ ticks: { beginAtZero: true } }] },
            legend: { display: false }

        },


    });


</script>
